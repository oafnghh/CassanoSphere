/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-07-15 15:16:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import service.ConnectionDB;
import model.*;

public final class setting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/www/setting/includes/head.jsp", Long.valueOf(1721054699130L));
    _jspx_dependants.put("/www/setting/includes/main.jsp", Long.valueOf(1721056585676L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("service.ConnectionDB");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

User auth = (User) request.getSession().getAttribute("auth");
if (auth != null) {
	request.setAttribute("auth", auth);
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com?plugins=forms,typography\"></script>\r\n");
      out.write("		<script src=\"https://unpkg.com/unlazy@0.11.3/dist/unlazy.with-hashing.iife.js\" defer init></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			window.tailwind.config = {\r\n");
      out.write("				darkMode: ['class'],\r\n");
      out.write("				theme: {\r\n");
      out.write("					extend: {\r\n");
      out.write("						colors: {\r\n");
      out.write("							border: 'hsl(var(--border))',\r\n");
      out.write("							input: 'hsl(var(--input))',\r\n");
      out.write("							ring: 'hsl(var(--ring))',\r\n");
      out.write("							background: 'hsl(var(--background))',\r\n");
      out.write("							foreground: 'hsl(var(--foreground))',\r\n");
      out.write("							primary: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--primary))',\r\n");
      out.write("								foreground: 'hsl(var(--primary-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							secondary: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--secondary))',\r\n");
      out.write("								foreground: 'hsl(var(--secondary-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							destructive: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--destructive))',\r\n");
      out.write("								foreground: 'hsl(var(--destructive-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							muted: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--muted))',\r\n");
      out.write("								foreground: 'hsl(var(--muted-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							accent: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--accent))',\r\n");
      out.write("								foreground: 'hsl(var(--accent-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							popover: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--popover))',\r\n");
      out.write("								foreground: 'hsl(var(--popover-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("							card: {\r\n");
      out.write("								DEFAULT: 'hsl(var(--card))',\r\n");
      out.write("								foreground: 'hsl(var(--card-foreground))'\r\n");
      out.write("							},\r\n");
      out.write("						},\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("		<style type=\"text/tailwindcss\">\r\n");
      out.write("			@layer base {\r\n");
      out.write("				:root {\r\n");
      out.write("					--background: 0 0% 100%;\r\n");
      out.write("--foreground: 240 10% 3.9%;\r\n");
      out.write("--card: 0 0% 100%;\r\n");
      out.write("--card-foreground: 240 10% 3.9%;\r\n");
      out.write("--popover: 0 0% 100%;\r\n");
      out.write("--popover-foreground: 240 10% 3.9%;\r\n");
      out.write("--primary: 240 5.9% 10%;\r\n");
      out.write("--primary-foreground: 0 0% 98%;\r\n");
      out.write("--secondary: 240 4.8% 95.9%;\r\n");
      out.write("--secondary-foreground: 240 5.9% 10%;\r\n");
      out.write("--muted: 240 4.8% 95.9%;\r\n");
      out.write("--muted-foreground: 240 3.8% 46.1%;\r\n");
      out.write("--accent: 240 4.8% 95.9%;\r\n");
      out.write("--accent-foreground: 240 5.9% 10%;\r\n");
      out.write("--destructive: 0 84.2% 60.2%;\r\n");
      out.write("--destructive-foreground: 0 0% 98%;\r\n");
      out.write("--border: 240 5.9% 90%;\r\n");
      out.write("--input: 240 5.9% 90%;\r\n");
      out.write("--ring: 240 5.9% 10%;\r\n");
      out.write("--radius: 0.5rem;\r\n");
      out.write("				}\r\n");
      out.write("				.dark {\r\n");
      out.write("					--background: 240 10% 3.9%;\r\n");
      out.write("--foreground: 0 0% 98%;\r\n");
      out.write("--card: 240 10% 3.9%;\r\n");
      out.write("--card-foreground: 0 0% 98%;\r\n");
      out.write("--popover: 240 10% 3.9%;\r\n");
      out.write("--popover-foreground: 0 0% 98%;\r\n");
      out.write("--primary: 0 0% 98%;\r\n");
      out.write("--primary-foreground: 240 5.9% 10%;\r\n");
      out.write("--secondary: 240 3.7% 15.9%;\r\n");
      out.write("--secondary-foreground: 0 0% 98%;\r\n");
      out.write("--muted: 240 3.7% 15.9%;\r\n");
      out.write("--muted-foreground: 240 5% 64.9%;\r\n");
      out.write("--accent: 240 3.7% 15.9%;\r\n");
      out.write("--accent-foreground: 0 0% 98%;\r\n");
      out.write("--destructive: 0 62.8% 30.6%;\r\n");
      out.write("--destructive-foreground: 0 0% 98%;\r\n");
      out.write("--border: 240 3.7% 15.9%;\r\n");
      out.write("--input: 240 3.7% 15.9%;\r\n");
      out.write("--ring: 240 4.9% 83.9%;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		</style>");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<div class=\"max-w-md mx-auto bg-card p-6 rounded-lg shadow-lg\">\r\n");
      out.write("	<div class=\"flex items-center justify-between mb-6\">\r\n");
      out.write("		<div class=\"flex items-center\">\r\n");
      out.write("			<img class=\"w-12 h-12 rounded-full\" src=\"https://placehold.co/48x48\"\r\n");
      out.write("				alt=\"Profile picture\" />\r\n");
      out.write("			<div class=\"ml-4\">\r\n");
      out.write("				<div class=\"text-lg font-semibold text-foreground\">Julianne\r\n");
      out.write("					Moore</div>\r\n");
      out.write("				<div class=\"text-sm text-muted-foreground\">View Profile</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<a\r\n");
      out.write("			href=\"logout\" class=\"bg-secondary text-secondary-foreground hover:bg-secondary/80 px-4 py-2 rounded-lg\">LogOut</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<form>\r\n");
      out.write("		<div class=\"mb-4\">\r\n");
      out.write("			<label class=\"block text-sm font-medium text-foreground\"\r\n");
      out.write("				for=\"first-name\">Name</label> <input\r\n");
      out.write("				class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("				type=\"text\" id=\"name\" />\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"mb-4\">\r\n");
      out.write("			<label class=\"block text-sm font-medium text-foreground\" for=\"email\">Email</label>\r\n");
      out.write("			<input\r\n");
      out.write("				class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("				type=\"email\" id=\"email\" readonly=\"readonly\" />\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"mb-4\">\r\n");
      out.write("			<label class=\"block text-sm font-medium text-foreground\"\r\n");
      out.write("				for=\"phone-number\">Phone number</label> <input\r\n");
      out.write("				class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("				type=\"text\" id=\"phone-number\" />\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"mb-4\">\r\n");
      out.write("			<label class=\"block text-sm font-medium text-foreground\"\r\n");
      out.write("				for=\"address\">Address</label> <input\r\n");
      out.write("				class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("				type=\"text\" id=\"address\" />\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"flex space-x-4 mb-4\">\r\n");
      out.write("			<div class=\"flex-1\">\r\n");
      out.write("				<label class=\"block text-sm font-medium text-foreground\" for=\"city\">Birthday</label>\r\n");
      out.write("				<input\r\n");
      out.write("					class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("					type=\"date\" id=\"city\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"flex-1\">\r\n");
      out.write("				<label class=\"block text-sm font-medium text-foreground\"\r\n");
      out.write("					for=\"country\">Sex</label> <select\r\n");
      out.write("					class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("					id=\"country\">\r\n");
      out.write("					<option value=\"1\">Male</option>\r\n");
      out.write("					<option value=\"2\">Female</option>\r\n");
      out.write("					<option value=\"3\">Other</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"flex-1\">\r\n");
      out.write("				<label class=\"block text-sm font-medium text-foreground\" for=\"zip\">Bio</label>\r\n");
      out.write("				<input\r\n");
      out.write("					class=\"mt-1 block w-full rounded-md border border-input bg-background px-3 py-2 text-foreground shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50\"\r\n");
      out.write("					type=\"text\" id=\"bio\" />\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"mb-4\">\r\n");
      out.write("			<label class=\"inline-flex items-center\"><a href=\"#\"\r\n");
      out.write("				class=\"ml-2 text-sm text-foreground\">Change Password !</a>\r\n");
      out.write("			</label>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"flex justify-end space-x-4\">\r\n");
      out.write("			<button type=\"button\"\r\n");
      out.write("				class=\"bg-muted text-muted-foreground hover:bg-muted/80 px-4 py-2 rounded-lg\">Cancel</button>\r\n");
      out.write("			<button type=\"submit\"\r\n");
      out.write("				class=\"bg-primary text-primary-foreground hover:bg-primary/80 px-4 py-2 rounded-lg\">Save</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
